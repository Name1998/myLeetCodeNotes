// https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/

/*  LEE215'S SOLUTION   O(n),   core:  →(↙ string ↗)←   */  
vector<int> stk, pair(s.length());
string res;
for(int i=0;i<s.length();i++){
    if(s[i]=='(')
        stk.push_back(i);
    if(s[i]==')')
    {
        pair[stk.back()] = i;
        pair[i] = stk.back();
        stk.pop_back();
    }
}
for(int i=0, d=1; i<s.length(); i+=d){
    if(s[i]=='(' || s[i]==')')
    {
        i = pair[i];
        d = -1*d;
    }
    else
        res+=s[i];
}
return res;



 /* MY SOLUTION (BRUTE FORCE) */
//         vector<int> stk;
//         int left=0, right=0;
//         for(int i=0; i<s.length(); i++){
//             if(s[i]=='(')
//                 stk.push_back(i);
//             else if(s[i]==')'){
//                 right = i;
//                 left = stk.back();
//                 stk.pop_back();
//                 reverse(s.begin()+left+1,s.begin()+right);
//             }
//         }
//         for(int i=0; i<s.length(); i++){
//             if(s[i]=='(' || s[i]==')'){
//                 s = s.substr(0,i) + s.substr(i+1);
//                 i--;
//             }
                
//         }
//         return s;
